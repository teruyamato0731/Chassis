name: Create Release
on:
  # mainから呼び出す
  workflow_call:
    inputs:
      new_tag:
        required: true
        type: string
      new_version:
        required: true
        type: string
      changelog:
        required: true
        type: string
    secrets:
      PLATFORMIO_AUTH_TOKEN:
        required: true

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    env:
      NEW_TAG: ${{ inputs.new_tag }}
      NEW_VERSION: ${{ inputs.new_version }}
      PR_BRANCH: "release/${{ inputs.new_tag }}"

    steps:
      - uses: actions/checkout@v3

      - name: Git config
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Set version
        run: sed -i -e 's/[0-9]\+\.[0-9]\+\.[0-9]\+/${NEW_VERSION}/' library.properties library.json

      - name: Push version
        # script injection の可能性あり？
        # inputなど を直接使用せずenvに設定して使う？
        # https://docs.github.com/ja/actions/security-guides/security-hardening-for-github-actions#understanding-the-risk-of-script-injections
        run: |
          git switch -c "${PR_BRANCH}"
          git add .
          git commit -m "Bump version: ${NEW_TAG}"
          git tag -a "${NEW_TAG}" -m "Bump version: ${NEW_TAG}"
          git push -u origin "${PR_BRANCH}"
          git push origin "${NEW_TAG}"

      - name: Create and merge Pull Request
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create --base "${GITHUB_REF_NAME}" --head "${PR_BRANCH}" --assignee "${GITHUB_ACTOR}" -l "bump version" \
             --title "Bump version: ${NEW_TAG}" --body 'Automated changes by [Bump Version](https://github.com/teruyamato0731/Chassis/actions/workflows/main.yml) GitHub action'
          gh pr merge "${PR_BRANCH}" --merge --delete-branch

      - uses: devcontainers/ci@v0.3
        with:
          cacheFrom: ghcr.io/teruyamato0731/chassis-devcontainer
          push: never
          runCmd: pio pkg pack -o "Chassis-${NEW_VERSION}.tar.gz" && pio pkg publish --no-interactive
          env: |
            PLATFORMIO_AUTH_TOKEN=${{ secrets.PLATFORMIO_AUTH_TOKEN }}

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ inputs.new_tag }}
          body: ${{ inputs.changelog }}
          artifacts: Chassis-${{ inputs.new_version }}.tar.gz

      - name: Delete cache
        run: |
          curl -X PURGE https://camo.githubusercontent.com/b0dfa47fce01d3b2696fda450c451312795fb591036205ae07de1bdb47853981/68747470733a2f2f6261646765732e72656769737472792e706c6174666f726d696f2e6f72672f7061636b616765732f7465727579616d61746f303733312f6c6962726172792f436861737369732e737667
